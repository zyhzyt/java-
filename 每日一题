
import java.util.Scanner;

public class Main {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String[] senString = s.split(" ");
        for(int i = senString.length-1; i >= 0;i--){
            if(i == 0) {
                System.out.print(senString[i]);
            }else {
                System.out.print(senString[i]+" ");
            }
        }
    }

    //去重：第二个字符串中出现的字符
    public static void main1(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s1=scanner.nextLine();
        String s2=scanner.nextLine();
        String[] arr1=s1.split("");
        StringBuffer sb=new StringBuffer();
        for (int i=0;i<arr1.length;i++){
            if (!s2.contains(arr1[i])){
                sb.append(arr1[i]);
            }
        }
        System.out.println(sb.toString());
    }
}



import java.util.*;

public class Printer {
    public int[] arrayPrint(int[][] arr, int n) {
        int [] result = new int[n*n];
        int x=0;
        List<Integer> list = new ArrayList<>();
        for(int y=n-1;y>=0;y--){//x=0 y--遍历
            int x2=x;
            int y2=y;
            if(x2!=0 && y2!=0){
                list.add(arr[x2][y2]);
            }
            if(x2!=0){
                y2--;
            }
            while (x2<n && (y2>=0&&y2<n)){
                list.add(arr[x2][y2]);
                x2++;
                y2++;
            }
        }

        int y=0;
        for(int i=1;i<n;i++){//y=0 x++遍历
            int x3=i;
            int y3=y;
            list.add(arr[x3][y3]);
            x3++;
            y3++;
            while (x3<n && (y3>=0&&y3<n)){
                list.add(arr[x3][y3]);
                x3++;
                y3++;
            }
        }

        for(int i=0;i<list.size();i++){
            result[i]=list.get(i);
        }
        return result;

    }

}




import java.util.*;
class main1{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            String str = sc.nextLine();
            int len = str.length();
            int i = 0;//左指针
            int j = len-1;//右指针
            int flag = 0;
            while(i <= j){
                if(str.charAt(i) != str.charAt(j)){
                    if(str.charAt(i)==str.charAt(j-1) && i<=j-1){
                        flag++;
                        j--;
                    }else if(str.charAt(i+1)==str.charAt(j) && i+1<=j){
                        flag++;
                        i++;
                    }else{
                        flag = flag+2;
                        break;
                    }
                }else{
                    i++;
                    j--;
                }
            }
            if(flag<2){
                System.out.println("YES");
            }else{
                System.out.println("NO");
            }
        }
    }
}


public class Main {
    public static void main(String[] args) {
        String s0 = "coco";
        int len = s0.length();
        char[] ch0 = s0.toCharArray();
        int start = 0;
        int end = len-1;
        int count = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0;i < len;i++){
            sb.append(s0.charAt(i));
        }
        while (start <= end){
            if (ch0[start] != ch0[end]) {
                if (end == len - 1) {
                    sb.append(ch0[start]);
                    String ss = sb.toString();
                    int a = 0;int b = ss.length()-1;
                    while (a <= b){
                        if (ss.charAt(a) != ss.charAt(b)){
                            System.out.println("NO");

                            continue;
                        }
                    }
                }else{
                    for (int i = 0; i < len / 2; i++) {
                        if (ch0[i] == ch0[start] || ch0[i] == ch0[end]) {
                            if (ch0[i] == ch0[start]) {
                                sb.insert(end, ch0[i]);
                                continue;
                            } else if (ch0[i] == ch0[end]) {
                                sb.insert(start, ch0[i]);
                                continue;
                            }
                        }
                    }
                String check = sb.toString();
                char[] chars = check.toCharArray();
                while (start <= end) {
                    if (chars[start] != chars[end]) {
                        System.out.println("NO");
                        continue;
                    }
                    start++;
                    end--;
                }
            }
                count++;
            }
            start++;
            end--;
        }
        System.out.println("YES");
    }

}



import java.text.DecimalFormat;
import java.util.Scanner;

class BaiduTest4 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()) {
            int n = sc.nextInt();
            int m = sc.nextInt();
            int k = sc.nextInt();
            sc.nextLine();
            int[] x = new int[n];
            int[] y = new int[m];
            for (int i = 0; i < k; i++) {
                String s = sc.nextLine();
                String[] values = s.split(" ");
                x[i] = Integer.parseInt(values[0]) - 1;
                y[i] = Integer.parseInt(values[1]) - 1;
            }
            System.out.println(mogu(n, m, k, x, y));
        }
    }
    public static String mogu(int n, int m, int k, int[] x, int[] y) {
        boolean[][] hasMush = new boolean[n][m];
        for(int i=0;i<k;i++){
            hasMush[x[i]][y[i]] = true;
        }
        double[][] p = new double[n][m];
        p[0][0] = 1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!(i==0 && j==0)){
                    if(hasMush[i][j]){
                        p[i][j] = 0;
                    }else{
                        p[i][j] = (j-1<0?0:(i+1<n?p[i][j-1]*0.5:p[i][j-1]))
                                +(i-1<0?0:(j+1<m?p[i-1][j]*0.5:p[i-1][j]));

                    }
                }
            }
        }
        return new DecimalFormat("0.00").format(p[n-1][m-1]);
    }
}

public class Main{
}


import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main{
    public  static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        List<Integer> al = new ArrayList<Integer>();
        int result = 0;
        int n = sc.nextInt();
        for(int i = 0;i<n;i++){
            int I = sc.nextInt();
            int L = sc.nextInt();
            if(I == 1){
                int j = 0;
                for(;j < al.size();j++){
                    if(al.get(j) >= L){
                        al.add(j,L);
                        break;
                    }
                }
                if(al.size()==j){     //位置很重要
                    al.add(L);
                }
                result = result+L;
            }else{
                al.remove(al.indexOf(L));
                result = result-L;
            }
            int max = al.get(al.size()-1);
            if(result-max > max){
                System.out.println("Yes");
            }else{
                System.out.println("No");
            }
        }
    }
}


