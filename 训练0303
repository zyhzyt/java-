
import java.util.*;

class Solution {
    public ArrayList<Integer> GetLeastNumbers_Solution(int [] input, int k) {
        ArrayList<Integer> array = new ArrayList<Integer>();
        if( k > input.length || k<0){
            return array;
        }
        for(int i = 0;i<k;i++){
            array.add(input[i]);
        }
        return array;
    }

    public ArrayList<Integer> GetLeastNumbers_Solution1(int [] input, int k) {
        List<Integer> list = new ArrayList<>();
        Arrays.sort(input);
        for (int i = 0;i < input.length;i++){
            list.add(input[i]);
        }
        return (ArrayList<Integer>) list;
//        List<Integer> list = new ArrayList<>();
//        Arrays.sort(input);
//        for (int i = input.length-1;i >= input.length-k;i--){
//            list.add(input[i]);
//        }
//        return (ArrayList<Integer>) list;
    }
}

public class Main {
    //    //读入一个字符串str，输出字符串str中的连续最长的数字串
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while(sc.hasNextLine()) {
            String str = sc.nextLine();
            int count = 0;
            int max = 0;
            int end = 0;
            for(int i = 0;i < str.length();i++) {
                if(str.charAt(i) >= '0' && str.charAt(i) <= '9') {
                    count++;
                    if(max < count) {
                        max = count;
                        end = i;
                    }
                }else {
                    count  = 0;
                }
            }
            System.out.println(str.substring(end,end+count+1));
        }
    }
}


//public class Main {
//    public static void main(String[] args) throws InterruptedException {
//        void waitForSignal(){
//            Object object = new Object();
//            synchronized (Thread.currentThread()){
//                object.wait();
//                object.notify();
//            }
//        }
//    }
//
//
//    public static void main(String[] args) {
//        StringBuffer a = new StringBuffer("A");
//        StringBuffer b = new StringBuffer("B");
//        op(a,b);
//        System.out.println(a+"."+b);
//    }
//
//    static void op(StringBuffer a, StringBuffer b) {
//        a.append(b);
//        b=a;
//    }
//}
